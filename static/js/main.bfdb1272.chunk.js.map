{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpences.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpences","amounts","income","expence","className","Transaction","sign","text","Math","abs","onClick","TransactionList","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bfdb1272.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <h2>\r\n            Expence Tracker   \r\n        </h2>\r\n    )\r\n}\r\n\r\nexport default Header;","export default (state, action) => {\r\n    switch(action.type) {\r\n        case 'DELETE_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions : state.transactions.filter(transaction => transaction.id !== action.payload)\r\n            }\r\n        case 'ADD_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions : [action.payload , ...state.transactions]\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}","import React, { createContext, useReducer } from 'react';\r\nimport AppReducer from './AppReducer.js';\r\n\r\n//initial state\r\nconst initialState = {\r\n    transactions : []\r\n}\r\n\r\n// CREATE CONTEXT\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n//Provider Component\r\nexport const GlobalProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n    //Actions\r\n    function deleteTransaction(id) {\r\n        dispatch({\r\n            type : 'DELETE_TRANSACTION',\r\n            payload: id\r\n        });\r\n    }\r\n\r\n    function addTransaction(transaction) {\r\n        dispatch({\r\n            type : 'ADD_TRANSACTION',\r\n            payload: transaction\r\n        });\r\n    }\r\n    \r\n    return (\r\n        <GlobalContext.Provider value={{\r\n            transactions: state.transactions,\r\n            deleteTransaction,\r\n            addTransaction\r\n        }}>\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    );\r\n}","import React, {useContext} from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\n\r\nexport const Balance = () => {\r\n    const {transactions} = useContext(GlobalContext);\r\n\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n    const total = amounts.reduce((acc, item) => ( acc+=item) , 0).toFixed(2);\r\n\r\n    return (\r\n        <>\r\n           <h4>Your Balance</h4> \r\n           <h1>{total} Rs</h1>\r\n        </>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const IncomeExpences = () => {\r\n  const {transactions} = useContext(GlobalContext);\r\n\r\n  const amounts = transactions.map(transaction => transaction.amount);\r\n  \r\n  const income = amounts.filter(item => item > 0).reduce((acc, item) => (acc+=item), 0).toFixed(2);\r\n\r\n  const expence = (\r\n    amounts.filter(item => item < 0).reduce((acc, item) =>(acc+=item), 0)*-1\r\n  ).toFixed(2)\r\n  \r\n    return (\r\n        <div className=\"inc-exp-container\">\r\n        <div>\r\n          <h4>Income</h4>\r\n          <p className=\"money plus\">{income} Rs</p>\r\n        </div>\r\n        <div>\r\n          <h4>Expense</h4>\r\n          <p className=\"money minus\">{expence} Rs</p>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const Transaction = ({transaction}) => {\r\n    const { deleteTransaction } = useContext(GlobalContext);\r\n\r\n    const sign = transaction.amount < 0 ? '-' : '+' \r\n    return (\r\n        <li className={transaction.amount < 0 ? \"minus\" : \"plus\"}>\r\n            {transaction.text} <span>{sign}{Math.abs(transaction.amount)}</span>\r\n            <button onClick={() => deleteTransaction(transaction.id)} className=\"delete-btn\">x</button>\r\n        </li>\r\n    )\r\n}\r\n\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { Transaction } from '../components/Transaction';\r\n\r\nexport const TransactionList = () => {\r\n    const {transactions} = useContext(GlobalContext);\r\n    \r\n    return (\r\n        <>\r\n           <h3>History</h3>\r\n            <ul className=\"list\">\r\n                {transactions.map(transaction => (<Transaction key={transaction.id} transaction={transaction}/>))} \r\n            </ul> \r\n        </>\r\n    )\r\n}\r\n","import React, {useState, useContext} from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\n\r\nexport const AddTransaction = () => {\r\n    const [text, setText] = useState('');\r\n    const [amount, setAmount] = useState(0);\r\n\r\n    const { addTransaction } = useContext(GlobalContext);\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const newTransaction = {\r\n            id : Math.floor(Math.random() * 1000000),\r\n            text,\r\n            amount : +amount\r\n        }\r\n\r\n        addTransaction(newTransaction);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3>Add new transaction</h3>\r\n            <form onSubmit={onSubmit}>\r\n                <div className=\"form-control\">\r\n                <label htmlFor=\"text\">Text</label>\r\n                <input \r\n                    type=\"text\" \r\n                    value={text} \r\n                    onChange={ e=> setText(e.target.value)} \r\n                    placeholder=\"Enter text...\" />\r\n                </div>\r\n                <div className=\"form-control\">\r\n                <label htmlFor=\"amount\"\r\n                    >Amount <br />\r\n                    (negative - expense, positive - income)</label\r\n                >\r\n                <input \r\n                    type=\"number\" \r\n                    value={amount} \r\n                    onChange={ e=> setAmount(e.target.value)} \r\n                    placeholder=\"Enter amount...\" />\r\n                </div>\r\n                <button className=\"btn\">Add transaction</button>\r\n            </form>  \r\n        </>\r\n    )\r\n}\r\n","\nimport './App.css';\nimport Header from \"./components/Header\";\nimport { Balance } from \"./components/Balance\";\nimport { IncomeExpences } from \"./components/IncomeExpences\";\nimport { TransactionList } from \"./components/TransactionList\";\nimport { AddTransaction } from \"./components/AddTransaction\";\n\nimport { GlobalProvider } from './context/GlobalState';\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpences />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}